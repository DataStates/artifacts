#!/bin/bash
#COBALT -A VeloC
#COBALT -n 2
#COBALT -t 0:30:00
#COBALT -q default
#COBALT --mode script

set -eu

# note: disable registration cache for verbs provider for now; see
#       discussion in https://github.com/ofiwg/libfabric/issues/5244
export FI_MR_CACHE_MAX_COUNT=0
# use shared recv context in RXM; should improve scalability
export FI_OFI_RXM_USE_SRX=1
export LD_LIBRARY_PATH=$HOME/install/lib64:$LD_LIBRARY_PATH
export LD_LIBRARY_PATH=$HOME/install/lib:$LD_LIBRARY_PATH
#echo "Setting up spack"
#source $HOME/spack/share/spack/setup-env.sh
#echo "Activating env"
#spack env activate myenv3

#spack add libfabric fabrics=rxm,verbs,tcp,sockets
#echo "Starting up application"

#mpiexec -f $COBALT_NODEFILE -n 1 -N 1 -m 1 ./server
mapfile -t nodes_array -d '\n' < $COBALT_NODEFILE
echo "node array: $nodes_array"

head_node=${nodes_array[0]}
mpirun --hosts $head_node -n 1 ./server "ofi+verbs" &

set +eu
sleep 1

#if [ -f /etc/bashrc ]; then
#        . /etc/bashrc
#fi

echo "reached here 1"
EXP_DIR=$HOME/experiments

echo "reached here 2"
INIT_SCRIPT=$EXP_DIR/init_script.sh


echo "reached here 3"
source $INIT_SCRIPT
CPUS_PER_NODE=12
GPUS_PER_NODE=1
# Initializat1on of environment
#source $INIT_SCRIPT
# Getting the node names
#mapfile -t nodes_array -d '\n' < $COBALT_NODEFILE
#echo "node array: $nodes_array"

head_node=${nodes_array[1]}
echo "head node: $head_node"
head_node_ip=$(getent hosts $head_node | awk '{ print $1 }')
#dig_out=$(dig +short $head_node A)
#echo "dig: output $dig_out"
#head_node_ip=$(dig $head_node a +short | awk 'FNR==2')
echo "head node ip: $head_node_ip"
# Starting the Ray Head Node
port=6379
ip_head=$head_node_ip:$port
export ip_head
echo "IP Head: $ip_head"
#ray start --head --node-ip-address=$head_node_ip --port=$port \
#    --num-cpus $CPUS_PER_NODE --num-gpus $GPUS_PER_NODE --block
#ssh -tt $head_node_ip "source $INIT_SCRIPT && cd $EXP_DIR && python gpu_usage.py" &

echo "Starting HEAD at $head_node"
ssh -tt $head_node_ip "source $INIT_SCRIPT; cd $EXP_DIR; \
    ray start --head --node-ip-address=$head_node_ip --port=$port \
    --num-cpus $CPUS_PER_NODE --num-gpus $GPUS_PER_NODE --block" &

echo "STAARTEDDDDDDD"
ssh -tt $head_node_ip "source $INIT_SCRIPT && cd $EXP_DIR && \
python transfer_learn.py --load_data_mode ray"
#python transfer_learn.py --application nt3 --test_data_path /home/mmadhya1/experiments/nt_test2.csv --train_data_path /home/mmadhya1/experiments/nt_train2.csv"


ssh -tt $head_node_ip "source $INIT_SCRIPT && ray stop"
echo "STOPPED"
# Optional, though may be useful in certain versions of Ray < 1.0.
sleep 10
